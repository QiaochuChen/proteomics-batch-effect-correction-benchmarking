if (!dir.exists(dir2work)) dir.create(dir2work)
dir2save1 <- paste(dir2work, "/figures", sep = "")
if (!dir.exists(dir2save1)) dir.create(dir2save1)
dir2save2 <- paste(dir2work, "/tables", sep = "")
if (!dir.exists(dir2save2)) dir.create(dir2save2)
set.seed(20250630)
## Set plot parameters ---------------------
dictColorsSample <- c("#4D9221","#C51B7D", "black", "#999")
names(dictColorsSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictShapesSample <- c(15, 17, 16, 16)
names(dictShapesSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictColorsBatch <- c("#FB9A99", "#FDBF6F", "#1F78B4")
names(dictColorsBatch) <- c("Batch1", "Batch2", "Batch3")
dictColorsSex <- c("F" = "#e98989", "M" = "#78b7ee")
dictColorsWeek <- c("Baseline" = "#1B9E77", "Week24" = "#D95F02")
dictColorsTV <- c("#7db7e6", "#e6e384")
names(dictColorsTV) <- 1:2
dictClassNames <- c("Training", "Validation")
names(dictClassNames) <- 1:2
dictLabelsCorrectMethods <- c("LOESS", "Ratio", "Med-C", "Combat", "RUV-III-C", "Harmony")
names(dictLabelsCorrectMethods) <- c("loess", "ratio", "median", "combat", "ruv", "harmony")
dictLabelsCorrectMethods2 <- paste("LOESS +", dictLabelsCorrectMethods[2:6])
names(dictLabelsCorrectMethods2) <- paste(names(dictLabelsCorrectMethods)[2:6], "_loess", sep = "")
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, dictLabelsCorrectMethods2)
dictLabelsCorrectMethods <- dictLabelsCorrectMethods[c(1, 2, 7, 3, 8, 4, 9, 5, 10, 6, 11)]
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, "negctrl" = "Negative Control")
p_format <- function(p_value) {
# 设置一个非常小的阈值
threshold <- .0001
# 如果P值小于阈值，则使用 "<" 符号
if (p_value < threshold) {
return(paste0("**** (P < 0.0001)"))
} else if (p_value < .001) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("*** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .01) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .05) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("* (P = ", format(p_value, digits = 2), ")", sep = ""))
} else {
return(paste0("NS (P = ", format(p_value, digits = 2), ")", sep = ""))
}
}
## supplementary figure 13a -------------------------
df_test5 <- df_test %>%
filter(! correct_method %in% c("Uncorrected", "Negative Control", "LOESS corrected")) %>%
mutate(group = ifelse(grepl("LOESS", correct_method), "LOESS-dependent", "LOESS-independent"))
## figure6a -------------------------
df_mcc_rsquare <- fread("./results/tables/mcc_rsquare_chihope.csv")
df_test <- df_mcc_rsquare %>%
mutate_at("correct_method", ~ dictLabelsCorrectMethods[.]) %>%
mutate_at("correct_method", ~ ifelse(is.na(.),
"Uncorrected", .)) %>%
mutate_at("correct_method", ~ ifelse(. %in% c("Negative Control", "Uncorrected"),
., paste(., "corrected"))) %>%
arrange(mcc)
## supplementary figure 13a -------------------------
df_test5 <- df_test %>%
filter(! correct_method %in% c("Uncorrected", "Negative Control", "LOESS corrected")) %>%
mutate(group = ifelse(grepl("LOESS", correct_method), "LOESS-dependent", "LOESS-independent"))
p_mcc_box <- ggplot(df_test5, aes(x = group, y = mcc)) +
geom_boxplot(aes(fill = group), width = .7, alpha = .8,
position = position_dodge(width = .8)) +
geom_signif(comparisons = list(c("LOESS-dependent", "LOESS-independent")),
map_signif_level = p_format,
y_position = .45,
tip_length = .1,
textsize = 6,
test = "t.test") +
theme_bw() +
theme(legend.position = "none",
axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.margin = unit(c(.5, .5, .5, .5), "cm")) +
scale_fill_manual(values = c("#1B7837", "#762A83")) +
scale_y_continuous(limits = c(.3, .5), n.breaks = 5, name = "MCC")
sp_figure13a <- p_mcc_box
## supplementary figure 13b -------------------------
df_test5 <- df_test %>%
filter(! correct_method %in% c("Uncorrected", "Negative Control", "LOESS corrected")) %>%
mutate(group = ifelse(grepl("LOESS", correct_method), "LOESS-dependent", "LOESS-independent"))
p_rsquare_box <- ggplot(df_test5, aes(x = group, y = r_square)) +
geom_boxplot(aes(fill = group), width = .7, alpha = .8,
position = position_dodge(width = .8)) +
geom_signif(comparisons = list(c("LOESS-dependent", "LOESS-independent")),
map_signif_level = p_format,
y_position = .25,
tip_length = .25,
textsize = 6,
test = "t.test") +
theme_bw() +
theme(legend.position = "none",
axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.margin = unit(c(.5, .5, .5, .5), "cm")) +
scale_fill_manual(values = c("#1B7837", "#762A83")) +
scale_y_continuous(limits = c(.1, .3), n.breaks = 5, name = "R square")
sp_figure13b <- p_rsquare_box
## combined supplementary figure 13-------------------------
sp_figure13 <- plot_grid(sp_figure13a, sp_figure13b,
ncol = 2, rel_widths = c(1, 1),
labels = c("a", "b"), label_size = 20)
ggsave("./results/figures/extended_figure13.pdf", sp_figure13,
width = 210, height = 120, units = "mm")
## supplementary figure 13a -------------------------
df_test5 <- df_test %>%
filter(! correct_method %in% c("Uncorrected", "Negative Control", "LOESS corrected")) %>%
mutate(group = ifelse(grepl("LOESS", correct_method), "LOESS-dependent", "LOESS-independent"))
p_mcc_box <- ggplot(df_test5, aes(x = group, y = mcc)) +
geom_boxplot(aes(fill = group), width = .7, alpha = .8,
position = position_dodge(width = .8)) +
geom_signif(comparisons = list(c("LOESS-dependent", "LOESS-independent")),
map_signif_level = p_format,
vjust = -.5,
y_position = .45,
tip_length = .1,
textsize = 6,
test = "t.test") +
theme_bw() +
theme(legend.position = "none",
axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.margin = unit(c(.5, .5, .5, .5), "cm")) +
scale_fill_manual(values = c("#1B7837", "#762A83")) +
scale_y_continuous(limits = c(.3, .5), n.breaks = 5, name = "MCC")
sp_figure13a <- p_mcc_box
## supplementary figure 13b -------------------------
df_test5 <- df_test %>%
filter(! correct_method %in% c("Uncorrected", "Negative Control", "LOESS corrected")) %>%
mutate(group = ifelse(grepl("LOESS", correct_method), "LOESS-dependent", "LOESS-independent"))
p_rsquare_box <- ggplot(df_test5, aes(x = group, y = r_square)) +
geom_boxplot(aes(fill = group), width = .7, alpha = .8,
position = position_dodge(width = .8)) +
geom_signif(comparisons = list(c("LOESS-dependent", "LOESS-independent")),
map_signif_level = p_format,
vjust = -.5,
y_position = .25,
tip_length = .25,
textsize = 6,
test = "t.test") +
theme_bw() +
theme(legend.position = "none",
axis.title.y = element_text(size = 14),
axis.title.x = element_blank(),
axis.text.y = element_text(size = 12),
axis.text.x = element_text(size = 12, angle = 45, hjust = 1, vjust = 1),
panel.grid.major.x = element_blank(),
panel.grid.minor.y = element_blank(),
plot.margin = unit(c(.5, .5, .5, .5), "cm")) +
scale_fill_manual(values = c("#1B7837", "#762A83")) +
scale_y_continuous(limits = c(.1, .3), n.breaks = 5, name = "R square")
sp_figure13b <- p_rsquare_box
## combined supplementary figure 13-------------------------
sp_figure13 <- plot_grid(sp_figure13a, sp_figure13b,
ncol = 2, rel_widths = c(1, 1),
labels = c("a", "b"), label_size = 20)
ggsave("./results/figures/extended_figure13.pdf", sp_figure13,
width = 210, height = 120, units = "mm")
?stat_cor
??stat_cor
?geom_smooth
??geom_smooth
exp(18)
library(parallel)
library(pbapply)
library(readxl)
library(openxlsx)
library(dplyr)
library(tibble)
library(tidyr)
library(reshape2)
library(data.table)
library(stringr)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(cowplot)
## global ---------------------
if (!interactive()) pboptions(type = "none")
options(mc.cores = 4)
dir2work <- "./results"
if (!dir.exists(dir2work)) dir.create(dir2work)
dir2save1 <- paste(dir2work, "/figures", sep = "")
if (!dir.exists(dir2save1)) dir.create(dir2save1)
dir2save2 <- paste(dir2work, "/tables", sep = "")
if (!dir.exists(dir2save2)) dir.create(dir2save2)
set.seed(20250630)
## Set plot parameters ---------------------
dictLabelsScenario <- c("Quartet-B", "Quartet-C", "Simulated-B", "Simulated-C")
names(dictLabelsScenario) <- c("quartet_balanced", "quartet_confounded",
"simulated_balanced", "simulated_confounded")
dictColorsLevel <- c("#E41A1C", "#984EA3", "#377EB8", "#006D2C")
names(dictColorsLevel) <- c("Uncorrected", "Precursor-corrected", "Peptide-corrected", "Protein-corrected")
dictColorsSample <- c("#4CC3D9", "#7BC8A4", "#FFC65D", "#F16745", "#999", "#2171B5", "#CB181D")
names(dictColorsSample) <- c("D5", "D6", "F7", "M8", "Group1", "Group2", "Group3")
dictShapesBatch <- c(12:17, 1:3)
names(dictShapesBatch) <- c("L1-1", "L2-1", "L3", "L1-2", "L2-2", "L4",
"Batch1", "Batch2", "Batch3")
dictLabelsBatch <- c("L1-1", "L2-1", "L3", "L1-2", "L2-2", "L4", "Batch1", "Batch2", "Batch3")
names(dictLabelsBatch) <- c("DDA_APT", "DDA_FDU", "DDA_NVG", "DIA_APT", "DIA_BGI", "DIA_FDU",
"batch1", "batch2", "batch3")
dictLabelsCorrectMethods <- c("Ratio", "Med-C", "Combat", "RUV-III-C", "Harmony", "WaveICA2", "NormAE")
names(dictLabelsCorrectMethods) <- c("ratio", "median", "combat", "ruv", "harmony", "waveica", "normae")
## source data: MCC --------------------
df_mcc_rsquare <- fread("./results/tables/mcc_rsquare_chihope.csv")
View(df_mcc_rsquare)
View(df_mcc_rsquare)
sub_pvca_final_revised <- sub_pvca_final %>%
mutate_at("correct_method", ~ ifelse(grepl("log", .), ., dictLabelsCorrectMethods[.]))
df_mcc_rsquare_revised <- df_mcc_rsquare %>%
mutate_at("correct_method", ~ ifelse(grepl("log", .), ., dictLabelsCorrectMethods[.]))
View(df_mcc_rsquare_revised)
## Set plot parameters ---------------------
dictColorsSample <- c("#4D9221","#C51B7D", "black", "#999")
names(dictColorsSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictShapesSample <- c(15, 17, 16, 16)
names(dictShapesSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictColorsBatch <- c("#FB9A99", "#FDBF6F", "#1F78B4")
names(dictColorsBatch) <- c("Batch1", "Batch2", "Batch3")
dictColorsSex <- c("F" = "#e98989", "M" = "#78b7ee")
dictColorsWeek <- c("Baseline" = "#1B9E77", "Week24" = "#D95F02")
dictColorsTV <- c("#7db7e6", "#e6e384")
names(dictColorsTV) <- 1:2
dictClassNames <- c("Training", "Validation")
names(dictClassNames) <- 1:2
dictLabelsCorrectMethods <- c("LOESS", "Ratio", "Med-C", "Combat", "RUV-III-C", "Harmony")
names(dictLabelsCorrectMethods) <- c("loess", "ratio", "median", "combat", "ruv", "harmony")
dictLabelsCorrectMethods2 <- paste("LOESS +", dictLabelsCorrectMethods[2:6])
names(dictLabelsCorrectMethods2) <- paste(names(dictLabelsCorrectMethods)[2:6], "_loess", sep = "")
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, dictLabelsCorrectMethods2)
dictLabelsCorrectMethods <- dictLabelsCorrectMethods[c(1, 2, 7, 3, 8, 4, 9, 5, 10, 6, 11)]
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, "negctrl" = "Negative Control")
p_format <- function(p_value) {
# 设置一个非常小的阈值
threshold <- .0001
# 如果P值小于阈值，则使用 "<" 符号
if (p_value < threshold) {
return(paste0("**** (P < 0.0001)"))
} else if (p_value < .001) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("*** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .01) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .05) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("* (P = ", format(p_value, digits = 2), ")", sep = ""))
} else {
return(paste0("NS (P = ", format(p_value, digits = 2), ")", sep = ""))
}
}
## source data: MCC --------------------
df_mcc_rsquare <- fread("./results/tables/mcc_rsquare_chihope.csv")
df_mcc_rsquare_revised <- df_mcc_rsquare %>%
mutate_at("correct_method", ~ ifelse(grepl("log", .), ., dictLabelsCorrectMethods[.]))
View(df_mcc_rsquare_revised)
df_mcc_rsquare_revised <- df_mcc_rsquare %>%
mutate_at("correct_method", ~ ifelse(grepl("log", .), "Uncorrected", dictLabelsCorrectMethods[.]))
## source data: MCC --------------------
df_mcc_rsquare <- fread("./results/tables/mcc_rsquare_chihope.csv")
df_mcc_rsquare_revised <- df_mcc_rsquare %>%
mutate_at("correct_method", ~ ifelse(grepl("log", .), "Uncorrected", dictLabelsCorrectMethods[.]))
View(df_mcc_rsquare_revised)
write.xlsx(df_mcc_rsquare_revised, "./results/tables/6-ChiHOPE-source_data.xlsx")
## source data: Test vs Reference --------------------
mcc_objs <- readRDS("./results/tables/mcc.rds")
mcc_objs_tmp <- pblapply(mcc_objs, function(tmp_obj) {
df_tmp <- tmp_obj$df %>%
distinct(class, value, estimate, dataset, scenario, data_level,
correct_level, correct_method, quant_method, label) %>%
mutate(label2 = ifelse(correct_method %in% "log", "Uncorrected",
paste(Hmisc::capitalize(correct_level), "-corrected", sep = "")))
})
sub_ref_final <- mcc_objs_tmp %>%
rbindlist %>%
filter(scenario %in% "confounded") %>%
filter(data_level %in% "protein") %>%
filter(quant_method %in% "maxlfq") %>%
filter(correct_method %in% c("ruv", "combat", "ratio")) %>%
mutate_at("data_level", ~ paste(Hmisc::capitalize(.), "-level", sep = "")) %>%
mutate_at("correct_level", ~ ifelse(correct_method %in% "log",  "Uncorrected",
paste(Hmisc::capitalize(.), "-corrected", sep = ""))) %>%
mutate_at("scenario", ~ dictLabelsScenario[paste(dataset, ., sep = "_")])%>%
mutate_at("correct_method", ~ ifelse(grepl("_log", .), ., dictLabelsCorrectMethods[.]))
View(sub_ref_final)
sub_ref_final <- mcc_objs_tmp %>%
rbindlist %>%
filter(scenario %in% "confounded") %>%
filter(data_level %in% "protein") %>%
filter(quant_method %in% "maxlfq") %>%
filter(correct_method %in% c("ruv", "combat", "ratio")) %>%
rename(value = Reference, estimate = Test) %>%
mutate_at("data_level", ~ paste(Hmisc::capitalize(.), "-level", sep = "")) %>%
mutate_at("correct_level", ~ ifelse(correct_method %in% "log",  "Uncorrected",
paste(Hmisc::capitalize(.), "-corrected", sep = ""))) %>%
mutate_at("scenario", ~ dictLabelsScenario[paste(dataset, ., sep = "_")])%>%
mutate_at("correct_method", ~ ifelse(grepl("_log", .), ., dictLabelsCorrectMethods[.]))
sub_ref_final <- mcc_objs_tmp %>%
rbindlist %>%
filter(scenario %in% "confounded") %>%
filter(data_level %in% "protein") %>%
filter(quant_method %in% "maxlfq") %>%
filter(correct_method %in% c("ruv", "combat", "ratio")) %>%
rename(Reference = value, Test = estimate) %>%
mutate_at("data_level", ~ paste(Hmisc::capitalize(.), "-level", sep = "")) %>%
mutate_at("correct_level", ~ ifelse(correct_method %in% "log",  "Uncorrected",
paste(Hmisc::capitalize(.), "-corrected", sep = ""))) %>%
mutate_at("scenario", ~ dictLabelsScenario[paste(dataset, ., sep = "_")])%>%
mutate_at("correct_method", ~ ifelse(grepl("_log", .), ., dictLabelsCorrectMethods[.]))
View(sub_ref_final)
write.xlsx(sub_ref_final, "./results/tables/7-TestReference-source_data.xlsx")
mcc_objs_tmp <- pblapply(mcc_objs, function(tmp_obj) {
df_tmp <- tmp_obj$df %>%
distinct(class, value, estimate, dataset, scenario, data_level,
correct_level, correct_method, quant_method, label)
})
sub_ref_final <- mcc_objs_tmp %>%
rbindlist
View(sub_ref_final)
sub_ref_final <- mcc_objs_tmp %>%
rbindlist %>%
filter(scenario %in% "confounded") %>%
filter(data_level %in% "protein") %>%
filter(quant_method %in% "maxlfq") %>%
filter(correct_method %in% c("ruv", "combat", "ratio")) %>%
rename(Reference = value, Test = estimate) %>%
mutate_at("data_level", ~ paste(Hmisc::capitalize(.), "-level", sep = "")) %>%
mutate_at("correct_level", ~ ifelse(correct_method %in% "log",  "Uncorrected",
paste(Hmisc::capitalize(.), "-corrected", sep = ""))) %>%
mutate_at("scenario", ~ dictLabelsScenario[paste(dataset, ., sep = "_")])%>%
mutate_at("correct_method", ~ ifelse(grepl("_log", .), ., dictLabelsCorrectMethods[.]))
write.xlsx(sub_ref_final, "./results/tables/7-TestReference-source_data.xlsx")
library(parallel)
library(pbapply)
library(readxl)
library(dplyr)
library(tibble)
library(reshape2)
library(data.table)
library(stringr)
library(ggplot2)
library(ggpubr)
library(ggthemes)
library(ggrepel)
library(RColorBrewer)
library(cowplot)
rm(list = ls())
## global ---------------------
if (!interactive()) pboptions(type = "none")
options(mc.cores = 4)
dir2work <- "./results"
if (!dir.exists(dir2work)) dir.create(dir2work)
dir2save1 <- paste(dir2work, "/figures", sep = "")
if (!dir.exists(dir2save1)) dir.create(dir2save1)
dir2save2 <- paste(dir2work, "/tables", sep = "")
if (!dir.exists(dir2save2)) dir.create(dir2save2)
set.seed(20250630)
## Set plot parameters ---------------------
dictColorsSample <- c("#4D9221","#C51B7D", "black", "#999")
names(dictColorsSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictShapesSample <- c(15, 17, 16, 16)
names(dictShapesSample) <- c("QC sample (P10)", "QC sample (P11)", "QC sample (PM)", "Study sample")
dictColorsBatch <- c("#FB9A99", "#FDBF6F", "#1F78B4")
names(dictColorsBatch) <- c("Batch1", "Batch2", "Batch3")
dictColorsSex <- c("F" = "#e98989", "M" = "#78b7ee")
dictColorsWeek <- c("Baseline" = "#1B9E77", "Week24" = "#D95F02")
dictColorsTV <- c("#7db7e6", "#e6e384")
names(dictColorsTV) <- 1:2
dictClassNames <- c("Training", "Validation")
names(dictClassNames) <- 1:2
dictLabelsCorrectMethods <- c("LOESS", "Ratio", "Med-C", "Combat", "RUV-III-C", "Harmony")
names(dictLabelsCorrectMethods) <- c("loess", "ratio", "median", "combat", "ruv", "harmony")
dictLabelsCorrectMethods2 <- paste("LOESS +", dictLabelsCorrectMethods[2:6])
names(dictLabelsCorrectMethods2) <- paste(names(dictLabelsCorrectMethods)[2:6], "_loess", sep = "")
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, dictLabelsCorrectMethods2)
dictLabelsCorrectMethods <- dictLabelsCorrectMethods[c(1, 2, 7, 3, 8, 4, 9, 5, 10, 6, 11)]
dictLabelsCorrectMethods <- c(dictLabelsCorrectMethods, "negctrl" = "Negative Control")
p_format <- function(p_value) {
# 设置一个非常小的阈值
threshold <- .0001
# 如果P值小于阈值，则使用 "<" 符号
if (p_value < threshold) {
return(paste0("**** (P < 0.0001)"))
} else if (p_value < .001) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("*** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .01) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("** (P = ", format(p_value, digits = 2), ")", sep = ""))
} else if (p_value < .05) {
# 否则，直接格式化P值并添加"P = "前缀
return(paste0("* (P = ", format(p_value, digits = 2), ")", sep = ""))
} else {
return(paste0("NS (P = ", format(p_value, digits = 2), ")", sep = ""))
}
}
## source data: MCC & R square --------------------
df_mcc_rsquare <- fread("./results/tables/mcc_rsquare_chihope.csv")
View(df_mcc_rsquare)
## supplementary figure 11-------------------------
all_files <- list.files("./ChiHOPE", recursive = TRUE, full.names = TRUE)
queried_files <- all_files[grepl("protein/maxlfq/expdata", all_files)]
expr_list <- pblapply(queried_files, function(file_id) {
dataset <- "ChiHOPE"
scenario <- "ChiHOPE"
data_level <- str_extract(file_id, sprintf("(?<=.%s/).+?(?=\\/.)", scenario))
quant_method <- str_extract(file_id, sprintf("(?<=.%s/).+?(?=\\/.)", data_level))
correct_level <- str_extract(file_id, sprintf("(?<=.%s/).+?(?=_corrected.)", quant_method))
correct_level <- ifelse(is.na(correct_level), data_level, correct_level)
correct_method <- str_extract(file_id,"(?<=expdata_).+?(?=.csv)")
correct_method <- gsub("_cutoff_NAs", "", correct_method)
df_expr <- fread(file_id)
df_meta <- fread("./ChiHOPE/meta.csv")
sub_ms <- df_expr %>%
reshape2::melt(., na.rm = TRUE, id = 1, variable.name = "run_id") %>%
group_by(run_id) %>%
summarise(intensity = median(value, na.rm = TRUE)) %>%
left_join(., df_meta, by = "run_id") %>%
mutate(dataset = dataset,
scenario = scenario,
data_level = data_level,
correct_level = correct_level,
correct_method = correct_method,
quant_method = quant_method)
return(sub_ms)
})
sub_ms_final <- rbindlist(expr_list)
View(sub_ms_final)
colnames(sub_ms_tmp)
sub_ms_tmp <- sub_ms_final %>%
filter(!run_id %in% "ExpB19") %>%
# filter(correct_method %in% c("log", "loess")) %>%
mutate_at("correct_method", ~ dictLabelsCorrectMethods[.]) %>%
mutate_at("correct_method", ~ ifelse(is.na(.), "Uncorrected", paste(., "corrected"))) %>%
mutate_at("correct_method", ~ factor(., levels = c("Uncorrected", paste(dictLabelsCorrectMethods, "corrected"))))
colnames(sub_ms_tmp)
View(sub_ms_tmp)
sub_ms_final <- sub_ms_tmp[, 1:5]
sub_ms_final <- sub_ms_tmp[, 1:5]
write.xlsx(sub_ms_final, "./results/tables/8-ChiHOPE-intensity-source_data.xlsx")
library(openxlsx)
sub_ms_final <- sub_ms_tmp[, 1:5]
write.xlsx(sub_ms_final, "./results/tables/8-ChiHOPE-intensity-source_data.xlsx")
## supplementary figure 12a ------------------------
pca_objs <- readRDS(paste("./results/tables/pca_snr_chihope.rds", sep = ""))
pcs_tables <- pblapply(pca_objs, function(pca_obj) {
sub_tmp <- pca_obj$pcs_values
sub_pcs <- sub_tmp %>%
dplyr::select(library, batch, sample, PC1, PC2) %>%
mutate(snr = pca_obj$snr_results$snr,
dataset = pca_obj$dataset,
scenario = pca_obj$scenario,
data_level = pca_obj$data_level,
correct_level = pca_obj$correct_level,
correct_method = pca_obj$correct_method,
quant_method = pca_obj$quant_method)
return(sub_pcs)
})
sub_pca_final <- rbindlist(pcs_tables)
sub_pca_tmp <- sub_pca_final %>%
filter(!library %in% "ExpJ1") %>%
filter(data_level %in% "protein") %>%
filter(is.na(quant_method)|quant_method %in% "maxlfq") %>%
mutate_at("correct_method", ~ dictLabelsCorrectMethods[.]) %>%
mutate_at("correct_method", ~ ifelse(is.na(.), "Uncorrected", paste(., "corrected"))) %>%
mutate_at("correct_method", ~ factor(., levels = c("Uncorrected", paste(dictLabelsCorrectMethods, "corrected")))) %>%
mutate(label = sprintf("%s\n(SNR = %.2f)", correct_method, snr)) %>%
mutate_at("data_level", ~ factor(., levels = c("precursor", "peptide", "protein")))
sub_tmp <- sub_pca_tmp %>% distinct(correct_method, label)
dictLabelsTmp <- setNames(sub_tmp$label, sub_tmp$correct_method)
View(sub_pca_tmp)
View(sub_pca_tmp)
write.xlsx(sub_pca_tmp, "./results/tables/9-ChiHOPE-pca-source_data.xlsx")
## supplementary figure 12b ------------------------
df_meta <- fread("./ChiHOPE/meta.csv")
umap_objs <- readRDS("./results/tables/umap_chihope.rds")
sub_umap_final <- rbindlist(umap_objs)
sub_umap_tmp <- sub_umap_final %>%
# filter(!library %in% c("ExpJ1", "ExpB19")) %>%
# filter(correct_method %in% "ruv_loess") %>%
mutate_at("correct_method", ~ dictLabelsCorrectMethods[.]) %>%
mutate_at("correct_method", ~ ifelse(is.na(.), "Uncorrected", paste(., "corrected"))) %>%
mutate_at("correct_method", ~ factor(., levels = c("Uncorrected", paste(dictLabelsCorrectMethods, "corrected"))))
write.xlsx(sub_umap_tmp, "./results/tables/9-ChiHOPE-umap-source_data.xlsx")
View(sub_umap_tmp)
colnames(sub_ms_tmp)
sub_ms_final <- sub_ms_tmp[, c(1:5, 27:32)]
write.xlsx(sub_ms_final, "./results/tables/8-ChiHOPE-intensity-source_data.xlsx")
colnames(sub_pca_tmp)
write.xlsx(sub_pca_tmp, "./results/tables/9-ChiHOPE-pca-source_data.xlsx")
colnames(sub_umap_tmp)
sub_umap_final <- sub_umap_tmp[, c(1:6, 28:33)]
View(sub_umap_final)
write.xlsx(sub_umap_final, "./results/tables/10-ChiHOPE-umap-source_data.xlsx")
renv::init()
renv::snapshot()
